
spring.application.name: spring-webflux

server.port: 8080
management:
  server.port: 18080
  endpoints.enabled-by-default: false
  endpoints.web.base-path: /management
  endpoints.web.exposure.include: health,prometheus
  metrics:
    distribution.percentiles-histogram.http.server.requests: true
    tags:
      application: ${spring.application.name}
      application-type: webflux
  endpoint:
    health.enabled: true
    prometheus.enabled: true

# consul
spring.cloud.consul:
  host: 127.0.0.1
  port: 8500
  discovery:
    tags:
      - webflux
      - kotlin
      - spring-boot-2.6
    metadata:
      type: webflux
      service: study-spring-boot
      component: ${spring.application.name}
      prometheus_exporter_path: /management/prometheus
    instance-id: ${random.uuid}
    service-name: ${spring.application.name}
    port: ${management.server.port}
    health-check-path: /management/health

# R2DBC(MySQL)
spring.r2dbc:
    url: r2dbc:mysql://localhost:3306/test?characterEncoding=UTF-8&useSSL=false
    username: test_user
    password: test_user
    pool:
      enabled: true
      initial-size: 5
      max-size: 30
      max-idle-time: 10m
      validation-query: select 1

spring.cache.caffeine.spec: expireAfterwrite=30s

logging.level.reactor.netty: INFO
logging.level.org.apache.http: INFO
logging.level.org.springframework.cache: TRACE
logging.level.root: DEBUG

